{
  "firstLayout": "",
  "gdVersion": {
    "build": 98,
    "major": 4,
    "minor": 0,
    "revision": 0
  },
  "properties": {
    "adMobAppId": "",
    "adaptGameResolutionAtRuntime": false,
    "folderProject": false,
    "linuxExecutableFilename": "",
    "macExecutableFilename": "",
    "orientation": "landscape",
    "packageName": "com.example.gamename",
    "projectFile": "/Users/joshualevin/Documents/GDevelop Projects/TBF/game.json",
    "scaleMode": "nearest",
    "sizeOnStartupMode": "",
    "useExternalSourceFiles": false,
    "version": "1.0.0",
    "winExecutableFilename": "",
    "winExecutableIconFile": "",
    "name": "Trial By Fire",
    "author": "",
    "windowWidth": 800,
    "windowHeight": 600,
    "latestCompilationDirectory": "",
    "maxFPS": 60,
    "minFPS": 20,
    "verticalSync": false,
    "platformSpecificAssets": {},
    "loadingScreen": {
      "showGDevelopSplash": false
    },
    "extensions": [
      {
        "name": "BuiltinObject"
      },
      {
        "name": "BuiltinAudio"
      },
      {
        "name": "BuiltinVariables"
      },
      {
        "name": "BuiltinTime"
      },
      {
        "name": "BuiltinMouse"
      },
      {
        "name": "BuiltinKeyboard"
      },
      {
        "name": "BuiltinJoystick"
      },
      {
        "name": "BuiltinCamera"
      },
      {
        "name": "BuiltinWindow"
      },
      {
        "name": "BuiltinFile"
      },
      {
        "name": "BuiltinNetwork"
      },
      {
        "name": "BuiltinScene"
      },
      {
        "name": "BuiltinAdvanced"
      },
      {
        "name": "Sprite"
      },
      {
        "name": "BuiltinCommonInstructions"
      },
      {
        "name": "BuiltinCommonConversions"
      },
      {
        "name": "BuiltinStringInstructions"
      },
      {
        "name": "BuiltinMathematicalTools"
      },
      {
        "name": "BuiltinExternalLayouts"
      }
    ],
    "platforms": [
      {
        "name": "GDevelop JS platform"
      }
    ],
    "currentPlatform": "GDevelop JS platform"
  },
  "resources": {
    "resources": [
      {
        "alwaysLoaded": false,
        "file": "Sprites/Soldier/Poses/soldier_idle.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Soldier/Poses/soldier_idle.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Zombie/Poses/zombie_idle.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Zombie/Poses/zombie_idle.png",
        "smoothed": true,
        "userAdded": false
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Soldier/Poses/soldier_slide.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Soldier/Poses/soldier_slide.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Soldier/Poses/soldier_action1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Soldier/Poses/soldier_action1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Soldier/Poses/soldier_action2.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Soldier/Poses/soldier_action2.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Zombie/Poses/zombie_slide.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Zombie/Poses/zombie_slide.png",
        "smoothed": true,
        "userAdded": false
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Zombie/Poses/zombie_action1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Zombie/Poses/zombie_action1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Zombie/Poses/zombie_action2.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Zombie/Poses/zombie_action2.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Soldier/Poses/soldier_kick.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Soldier/Poses/soldier_kick.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Zombie/Poses/zombie_kick.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Zombie/Poses/zombie_kick.png",
        "smoothed": true,
        "userAdded": false
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-0.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-0.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Sniper/Poses/female_idle.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Sniper/Poses/female_idle.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Sniper/Poses/female_slide.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Sniper/Poses/female_slide.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Sniper/Poses/female_action1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Sniper/Poses/female_action1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Sniper/Poses/female_action2.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Sniper/Poses/female_action2.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/open-1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/open-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "file": "fonts/Celia Garcia.ttf",
        "kind": "font",
        "metadata": "",
        "name": "fonts/Celia Garcia.ttf",
        "userAdded": false
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/open-1-0.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/open-1-0.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/buy_soldier_area-1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/buy_soldier_area-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-2.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-2.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-3.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-3.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-4.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-4.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-5.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-5.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-6.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-6.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-7.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-7.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-7-1.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-7-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-8.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-8.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-9.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-9.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-10.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-10.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "Sprites/Piskel/NewObject-1-11.png",
        "kind": "image",
        "metadata": "",
        "name": "Sprites/Piskel/NewObject-1-11.png",
        "smoothed": true,
        "userAdded": true
      }
    ],
    "resourceFolders": []
  },
  "objects": [],
  "objectsGroups": [],
  "variables": [
    {
      "name": "setup_data",
      "value": "[]"
    },
    {
      "name": "player_cache",
      "value": "1"
    },
    {
      "name": "column_owned",
      "value": "2"
    },
    {
      "name": "player_health",
      "value": "10"
    },
    {
      "name": "player_health_max",
      "value": "10"
    },
    {
      "name": "round",
      "value": "1"
    },
    {
      "name": "round_data",
      "value": "[\n    {\n        \"round\": 1,\n        \"units\": [\n            {\n                \"name\": \"sniper\",\n                \"column\": 0,\n                \"row\": 0\n            }\n        ]\n    }, {\n        \"round\": 2,\n        \"units\": [\n            {\n                \"name\": \"soldier\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 1,\n                \"row\": 1\n            }\n        ]\n    }, {\n        \"round\": 3,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 2\n            }\n        ]\n    }, {\n        \"round\": 4,\n        \"units\": [\n            {\n                \"name\": \"soldier\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 1,\n                \"row\": -1\n            }\n        ]\n    }, {\n        \"round\": 5,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 2\n            }\n        ]\n    }, {\n        \"round\": 6,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": -1\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 2\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 0\n            }\n        ]\n    }, {\n        \"round\": 7,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": -1\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 2\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 0\n            }\n        ]\n    }, {\n        \"round\": 8,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": -1\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 2\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 0\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": -2\n            }\n        ]\n    }, {\n        \"round\": 9,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 2,\n                \"row\": 2\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 2,\n                \"row\": -2\n            }\n        ]\n    }, {\n        \"round\": 10,\n        \"units\": [\n            {\n                \"name\": \"zombie\",\n                \"column\": 0,\n                \"row\": 0\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 1,\n                \"row\": 1\n            }, {\n                \"name\": \"zombie\",\n                \"column\": 1,\n                \"row\": -1\n            }, {\n                \"name\": \"soldier\",\n                \"column\": 2,\n                \"row\": 2\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": 0\n            }, {\n                \"name\": \"sniper\",\n                \"column\": 2,\n                \"row\": -2\n            }\n        ]\n    }\n]"
    }
  ],
  "layouts": [
    {
      "b": 255,
      "disableInputWhenNotFocused": true,
      "mangledName": "setup",
      "name": "setup",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 242,
      "standardSortMethod": true,
      "stopSoundsOnStartup": true,
      "title": "",
      "v": 168,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1
      },
      "objectsGroups": [],
      "variables": [
        {
          "name": "selected_slot",
          "value": "0"
        },
        {
          "name": "unit_ui_visible",
          "value": "none"
        },
        {
          "name": "column_owned",
          "value": "2"
        },
        {
          "name": "soldier_cost",
          "value": "2"
        },
        {
          "name": "zombie_cost",
          "value": "2"
        },
        {
          "name": "sniper_cost",
          "value": "1"
        },
        {
          "name": "column_1_cost",
          "value": "2"
        },
        {
          "name": "column_0_cost",
          "value": "4"
        }
      ],
      "instances": [
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 338,
          "y": 203,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "1"
            },
            {
              "name": "column",
              "value": "0"
            },
            {
              "name": "row",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 208,
          "y": 96,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "3"
            },
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 210,
          "y": 302,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "2"
            },
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "-1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 54,
          "y": 377,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "4"
            },
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "-2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 52,
          "y": 202,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "5"
            },
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 147,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 83,
          "x": 49,
          "y": 22,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "id",
              "value": "6"
            },
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 40,
          "layer": "shop",
          "locked": false,
          "name": "buy_soldier",
          "width": 123,
          "x": 617,
          "y": 117,
          "zOrder": 3,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "soldier",
          "width": 0,
          "x": 513,
          "y": 97,
          "zOrder": 4,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "soldier"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "buy_sniper",
          "width": 0,
          "x": 616,
          "y": 249,
          "zOrder": 5,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "sniper",
          "width": 0,
          "x": 516,
          "y": 230,
          "zOrder": 6,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "sniper"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "buy_zombie",
          "width": 0,
          "x": 613,
          "y": 377,
          "zOrder": 7,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "zombie",
          "width": 0,
          "x": 516,
          "y": 362,
          "zOrder": 8,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "zombie"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "background",
          "width": 0,
          "x": 497,
          "y": 41,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "unit",
          "locked": false,
          "name": "background",
          "width": 0,
          "x": 497,
          "y": 41,
          "zOrder": -1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "unit",
          "locked": false,
          "name": "sell_button",
          "width": 0,
          "x": 558,
          "y": 492,
          "zOrder": 12,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 64,
          "layer": "unit",
          "locked": false,
          "name": "sell_button_area",
          "width": 169,
          "x": 538,
          "y": 487,
          "zOrder": 19,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 107,
          "layer": "shop",
          "locked": false,
          "name": "buy_area",
          "width": 245,
          "x": 504,
          "y": 374,
          "zOrder": 24,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit",
              "value": "zombie"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "buy_column",
          "width": 0,
          "x": 222,
          "y": 511,
          "zOrder": 25,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column_to_buy",
              "value": "1"
            },
            {
              "name": "cost",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "buy_column",
          "width": 0,
          "x": 355,
          "y": 510,
          "zOrder": 26,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column_to_buy",
              "value": "0"
            },
            {
              "name": "cost",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "cache_display",
          "width": 0,
          "x": 286,
          "y": 20,
          "zOrder": 27,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 57,
          "layer": "",
          "locked": false,
          "name": "cache_display_background",
          "width": 161,
          "x": 277,
          "y": 10,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "cost_of_unit",
          "width": 0,
          "x": 639,
          "y": 166,
          "zOrder": 29,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "soldier"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "cost_of_unit",
          "width": 0,
          "x": 639,
          "y": 308,
          "zOrder": 30,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "sniper"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "shop",
          "locked": false,
          "name": "cost_of_unit",
          "width": 0,
          "x": 642,
          "y": 429,
          "zOrder": 30,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit_name",
              "value": "zombie"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "ready_to_battle",
          "width": 0,
          "x": 568,
          "y": 211,
          "zOrder": 31,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 51,
          "layer": "shop",
          "locked": false,
          "name": "hide_all_ui",
          "width": 51,
          "x": 501,
          "y": 46,
          "zOrder": 32,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "unit",
          "locked": false,
          "name": "hide_all_ui",
          "width": 54,
          "x": 505,
          "y": 48,
          "zOrder": 33,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "column_cost",
          "width": 0,
          "x": 242,
          "y": 538,
          "zOrder": 36,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "column_cost",
          "width": 0,
          "x": 377,
          "y": 538,
          "zOrder": 36,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "unit",
          "locked": false,
          "name": "unit_layer_image",
          "width": 0,
          "x": 588,
          "y": 101,
          "zOrder": 38,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "unit",
          "locked": false,
          "name": "unit_layer_text",
          "width": 0,
          "x": 578,
          "y": 226,
          "zOrder": 39,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 107,
          "layer": "shop",
          "locked": false,
          "name": "buy_area",
          "width": 245,
          "x": 507,
          "y": 102,
          "zOrder": 24,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit",
              "value": "soldier"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 107,
          "layer": "shop",
          "locked": false,
          "name": "buy_area",
          "width": 245,
          "x": 500,
          "y": 247,
          "zOrder": 24,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "unit",
              "value": "sniper"
            }
          ]
        }
      ],
      "objects": [
        {
          "name": "slot",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "id",
              "value": ""
            },
            {
              "name": "is_occupied",
              "value": "false"
            },
            {
              "name": "column",
              "value": ""
            },
            {
              "name": "row",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "slot",
              "type": "setup::slot"
            }
          ],
          "animations": [
            {
              "name": "open",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/open-1-0.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "background",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "buy_soldier",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Soldier",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 50,
          "color": {
            "b": 250,
            "g": 250,
            "r": 250
          }
        },
        {
          "name": "soldier",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "unit_name",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "shop_unit",
              "type": "setup::shop_unit"
            }
          ],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "buy_sniper",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Sniper",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 50,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "sniper",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "unit_name",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "shop_unit",
              "type": "setup::shop_unit"
            }
          ],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "buy_zombie",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Zombie",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 50,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "zombie",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "unit_name",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "shop_unit",
              "type": "setup::shop_unit"
            }
          ],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "sell_button",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Sell Hero",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 50,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "sell_button_area",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "sell_unit",
              "type": "setup::sell_unit"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "buy_area",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "unit",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "buy_unit_area",
              "type": "setup::buy_unit_area",
              "unit": "zombie"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/buy_soldier_area",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/buy_soldier_area-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "buy_column",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "column_to_buy",
              "value": ""
            },
            {
              "name": "cost",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "buy_column",
              "type": "setup::buy_column"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-10.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "cache_display",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [
            {
              "name": "cache",
              "type": "setup::cache"
            }
          ],
          "string": "Cache: ",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 40,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "name": "cache_display_background",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-4.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "cost_of_unit",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [
            {
              "name": "unit_name",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "cost_of_unit",
              "type": "setup::cost_of_unit"
            }
          ],
          "string": "100",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 40,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "ready_to_battle",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "ready_to_battle",
              "type": "setup::ready_to_battle"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-5.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "hide_all_ui",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "hide_all_ui",
              "type": "setup::hide_all_ui"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-6.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "column_cost",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [
            {
              "name": "column",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "column_cost",
              "type": "setup::column_cost"
            }
          ],
          "string": "15",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 30,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "name": "unit_layer_image",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "unit_layer_image",
              "type": "setup::unit_layer_image"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "unit_layer_text",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [
            {
              "name": "unit_layer_text",
              "type": "setup::unit_layer_text"
            }
          ],
          "string": "Soldier",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 50,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Hide all the UI layers",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "HideLayer"
                      },
                      "parameters": [
                        "",
                        "\"unit\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "HideLayer"
                      },
                      "parameters": [
                        "",
                        "\"shop\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Initiate linked objects manager",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "slot",
                        "-100",
                        "-100",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::RemoveAllLinksOf"
                      },
                      "parameters": [
                        "",
                        "slot"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Delete"
                      },
                      "parameters": [
                        "slot",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Spawn units from last setup",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "slot",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::slot::spawn_saved_unit"
                      },
                      "parameters": [
                        "slot",
                        "slot",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Setup column cost",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "column_cost",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::column_cost::setup_cost"
                      },
                      "parameters": [
                        "column_cost",
                        "column_cost",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "buy_column",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::buy_column::setup_cost"
                      },
                      "parameters": [
                        "buy_column",
                        "buy_column",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            }
          ]
        }
      ],
      "layers": [
        {
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        },
        {
          "name": "shop",
          "visibility": false,
          "cameras": [],
          "effects": []
        },
        {
          "name": "unit",
          "visibility": false,
          "cameras": [],
          "effects": []
        }
      ],
      "behaviorsSharedData": [
        {
          "name": "buy_column",
          "type": "setup::buy_column"
        },
        {
          "name": "buy_unit_area",
          "type": "setup::buy_unit_area"
        },
        {
          "name": "cache",
          "type": "setup::cache"
        },
        {
          "name": "column_cost",
          "type": "setup::column_cost"
        },
        {
          "name": "cost_of_unit",
          "type": "setup::cost_of_unit"
        },
        {
          "name": "hide_all_ui",
          "type": "setup::hide_all_ui"
        },
        {
          "name": "ready_to_battle",
          "type": "setup::ready_to_battle"
        },
        {
          "name": "sell_unit",
          "type": "setup::sell_unit"
        },
        {
          "name": "shop_unit",
          "type": "setup::shop_unit"
        },
        {
          "name": "slot",
          "type": "setup::slot"
        },
        {
          "name": "unit_layer_image",
          "type": "setup::unit_layer_image"
        },
        {
          "name": "unit_layer_text",
          "type": "setup::unit_layer_text"
        }
      ]
    },
    {
      "b": 255,
      "disableInputWhenNotFocused": true,
      "mangledName": "battle",
      "name": "battle",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 135,
      "standardSortMethod": true,
      "stopSoundsOnStartup": true,
      "title": "",
      "v": 240,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1
      },
      "objectsGroups": [],
      "variables": [
        {
          "name": "tick",
          "value": "\"false\""
        },
        {
          "name": "hero_count",
          "value": "2"
        },
        {
          "name": "hero_ready_count",
          "value": "2"
        },
        {
          "name": "is_battle_over",
          "value": "\"false\""
        },
        {
          "name": "transitioning_to_setup",
          "value": "false"
        },
        {
          "name": "winning_team",
          "value": ""
        },
        {
          "name": "battle_cleanup",
          "value": "false"
        },
        {
          "name": "battle_won_cache",
          "value": "2"
        },
        {
          "name": "battle_lost_cache",
          "value": "1"
        }
      ],
      "instances": [
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 313,
          "y": 368,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "0"
            },
            {
              "name": "row",
              "value": "0"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 198,
          "y": 443,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "-1"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 197,
          "y": 262,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "1"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 83,
          "y": 545,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "-2"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 82,
          "y": 370,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "0"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 84,
          "y": 163,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "2"
            },
            {
              "name": "team",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 30,
          "layer": "",
          "locked": false,
          "name": "player_health_bar_red",
          "width": 200,
          "x": 17,
          "y": 10,
          "zOrder": 19,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 30,
          "layer": "",
          "locked": false,
          "name": "player_health_bar_green",
          "width": 200,
          "x": 17,
          "y": 10,
          "zOrder": 20,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "lose",
          "locked": false,
          "name": "lose_text",
          "width": 0,
          "x": 108,
          "y": 71,
          "zOrder": 21,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "win",
          "locked": false,
          "name": "win",
          "width": 0,
          "x": 40,
          "y": 67,
          "zOrder": 22,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 476,
          "y": 369,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "0"
            },
            {
              "name": "row",
              "value": "0"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 584,
          "y": 454,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "-1"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 578,
          "y": 257,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "1"
            },
            {
              "name": "row",
              "value": "1"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 715,
          "y": 545,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "-2"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 709,
          "y": 359,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "0"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "slot",
          "width": 0,
          "x": 708,
          "y": 159,
          "zOrder": 18,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "column",
              "value": "2"
            },
            {
              "name": "row",
              "value": "2"
            },
            {
              "name": "team",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "round_counter",
          "width": 0,
          "x": 649,
          "y": 18,
          "zOrder": 23,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        }
      ],
      "objects": [
        {
          "name": "soldier",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "team",
              "value": ""
            },
            {
              "name": "column",
              "value": ""
            },
            {
              "name": "row",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "hero",
              "type": "battle::hero",
              "damage": 9,
              "health": 50,
              "speed": 5,
              "dodge": 10,
              "special_speed": 10,
              "current_special_charge": 0,
              "current_speed_charge": 0,
              "attack_target": "single",
              "max_health": 35
            }
          ],
          "animations": [
            {
              "name": "idle",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "dead",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_slide.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "attack",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.2,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_action1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_action2.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Soldier/Poses/soldier_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "zombie",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "team",
              "value": ""
            },
            {
              "name": "column",
              "value": ""
            },
            {
              "name": "row",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "hero",
              "type": "battle::hero",
              "damage": 7,
              "health": 50,
              "speed": 7,
              "dodge": 10,
              "special_speed": 8,
              "current_special_charge": 0,
              "current_speed_charge": 0,
              "attack_target": "splash",
              "max_health": 90
            }
          ],
          "animations": [
            {
              "name": "idle",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "dead",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_slide.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "attack",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.2,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_action1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_action2.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Zombie/Poses/zombie_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "health_bar",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "health_bar",
              "type": "battle::health_bar"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-0.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "sniper",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "team",
              "value": ""
            },
            {
              "name": "column",
              "value": ""
            },
            {
              "name": "row",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "hero",
              "type": "battle::hero",
              "damage": 5,
              "health": 0,
              "speed": 3,
              "current_speed_charge": 0,
              "attack_target": "pierce",
              "max_health": 27
            }
          ],
          "animations": [
            {
              "name": "idle",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "dead",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_slide.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "attack",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.2,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_action1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_action2.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Sniper/Poses/female_idle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 40,
                        "y": 110
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "slot",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "column",
              "value": ""
            },
            {
              "name": "row",
              "value": ""
            },
            {
              "name": "team",
              "value": ""
            }
          ],
          "behaviors": [
            {
              "name": "slot",
              "type": "battle::slot"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject-1-7",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-7-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 25,
                        "y": 50
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "player_health_bar_red",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-8.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "player_health_bar_green",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [
            {
              "name": "player_health_bar",
              "type": "battle::player_health_bar"
            }
          ],
          "animations": [
            {
              "name": "Sprites/Piskel/NewObject",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Sprites/Piskel/NewObject-1-9.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "lose_text",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "It's all over...\n\nReturn to Minus,\nyour services are no-longer \nrequired",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 60,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "bold": false,
          "italic": false,
          "name": "win",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "You've made it!\n\nThe Hoard send their regards",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 60,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "bold": false,
          "italic": false,
          "name": "round_counter",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [
            {
              "name": "round_counter",
              "type": "battle::round_counter"
            }
          ],
          "string": "Round: 0",
          "font": "fonts/Celia Garcia.ttf",
          "characterSize": 40,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ResetTimer"
              },
              "parameters": [
                "",
                "\"tick\""
              ],
              "subInstructions": []
            }
          ],
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Set up player health bar",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::player_health_bar::update_health_bar_immediately"
                      },
                      "parameters": [
                        "player_health_bar_green",
                        "player_health_bar",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Spawn units from setup scene",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "slot",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjet"
                      },
                      "parameters": [
                        "slot",
                        "team",
                        "=",
                        "1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::slot::spawn_unit"
                      },
                      "parameters": [
                        "slot",
                        "slot",
                        "\"setup_data\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::ForEach",
                  "object": "slot",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjet"
                      },
                      "parameters": [
                        "slot",
                        "team",
                        "=",
                        "2"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::slot::spawn_enemy"
                      },
                      "parameters": [
                        "slot",
                        "slot",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Initiate linked objects manager",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "health_bar",
                        "-100",
                        "-100",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::RemoveAllLinksOf"
                      },
                      "parameters": [
                        "",
                        "health_bar"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Delete"
                      },
                      "parameters": [
                        "health_bar",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Set up hero ready counter",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst heroes = allObjects.filter((hero) => {\n    return hero.getVariables().get(\"team\").getAsNumber() != 0\n})\n\nruntimeScene.getVariables().get(\"hero_count\").setNumber(heroes.length)\nruntimeScene.getVariables().get(\"hero_ready_count\").setNumber(heroes.length)",
                  "parameterObjects": "",
                  "useStrict": true
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Set up round counter text",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::round_counter::initialize_round_counter"
                      },
                      "parameters": [
                        "round_counter",
                        "round_counter",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "disabled": false,
          "folded": true,
          "name": "Run a game tick ever 0.3s or when every hero has finished animating, whichever is later",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarSceneTxt"
                  },
                  "parameters": [
                    "tick",
                    "=",
                    "\"false\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "Timer"
                  },
                  "parameters": [
                    "",
                    "0.3",
                    "\"tick\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "VarScene"
                  },
                  "parameters": [
                    "hero_count",
                    ">=",
                    "Variable(hero_ready_count)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "battle::is_battle_over"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ResetTimer"
                  },
                  "parameters": [
                    "",
                    "\"tick\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarSceneTxt"
                  },
                  "parameters": [
                    "tick",
                    "=",
                    "\"true\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "hero_ready_count",
                    "=",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "disabled": false,
          "folded": false,
          "name": "After battle, transition to setup or end game",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "battle::is_battle_over"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "battle::player_health_bar::update_player_health_bar_lerp"
                  },
                  "parameters": [
                    "player_health_bar_green",
                    "player_health_bar",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "battle::is_game_finished"
                      },
                      "parameters": [
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::transition_to_setup"
                      },
                      "parameters": [
                        "",
                        "2",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_game_finished"
                      },
                      "parameters": [
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::is_game_won"
                          },
                          "parameters": [
                            "",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ShowLayer"
                          },
                          "parameters": [
                            "",
                            "\"win\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::is_game_lost"
                          },
                          "parameters": [
                            "",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ShowLayer"
                          },
                          "parameters": [
                            "",
                            "\"lose\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_battle_won"
                      },
                      "parameters": [
                        "",
                        "2",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "battle_cleanup",
                        "=",
                        "\"false\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "battle_cleanup",
                        "=",
                        "\"true\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Player takes 1 damage for each enemy unit alive",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst allHeroes = allObjects.filter((object) => {\n    return (typeof object.getBehavior(\"hero\") != \"undefined\")\n})\n\nconst aliveHeroes = allHeroes.filter((hero) => {\n    return hero.getBehavior(\"hero\")._behaviorData.health > 0\n})\n\nconst health = runtimeScene._runtimeGame.getVariables().get(\"player_health\").getAsNumber()\nruntimeScene._runtimeGame.getVariables().get(\"player_health\").setNumber(health - aliveHeroes.length)",
                          "parameterObjects": "player_health_bar_green",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_battle_won"
                      },
                      "parameters": [
                        "",
                        "1",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "battle_cleanup",
                        "=",
                        "\"false\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarGlobal"
                      },
                      "parameters": [
                        "round",
                        "+",
                        "1"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "battle_cleanup",
                        "=",
                        "\"true\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "layers": [
        {
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        },
        {
          "name": "lose",
          "visibility": false,
          "cameras": [],
          "effects": []
        },
        {
          "name": "win",
          "visibility": false,
          "cameras": [],
          "effects": []
        }
      ],
      "behaviorsSharedData": [
        {
          "name": "health_bar",
          "type": "battle::health_bar"
        },
        {
          "name": "hero",
          "type": "battle::hero"
        },
        {
          "name": "player_health_bar",
          "type": "battle::player_health_bar"
        },
        {
          "name": "round_counter",
          "type": "battle::round_counter"
        },
        {
          "name": "slot",
          "type": "battle::slot"
        }
      ]
    }
  ],
  "externalEvents": [],
  "eventsFunctionsExtensions": [
    {
      "author": "",
      "description": "",
      "extensionNamespace": "",
      "fullName": "",
      "name": "setup",
      "shortDescription": "",
      "tags": "",
      "version": "",
      "eventsFunctions": [],
      "eventsBasedBehaviors": [
        {
          "description": "A slot that can be used for setup phases",
          "fullName": "Slot",
          "name": "slot",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::slot::can_be_selected"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "selected_slot",
                        "=",
                        "Object.Variable(id)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "setup::slot::is_occupied"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ShowLayer"
                          },
                          "parameters": [
                            "",
                            "\"shop\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "disabled": false,
                          "folded": true,
                          "name": "Hide any visible unit UI",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "disabled": false,
                              "folded": false,
                              "type": "BuiltinCommonInstructions::JsCode",
                              "inlineCode": "const unitVisible = runtimeScene.getVariables().get(\"unit_ui_visible\").getAsString()\n\nif (unitVisible !== \"none\") {\n    runtimeScene.getLayer(\"unit\").show(false)\n}\n\nruntimeScene.getVariables().get(\"unit_ui_visible\").setString(\"none\")",
                              "parameterObjects": "Object",
                              "useStrict": true
                            }
                          ],
                          "parameters": []
                        }
                      ]
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "setup::slot::is_occupied"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "HideLayer"
                          },
                          "parameters": [
                            "",
                            "\"shop\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "disabled": false,
                          "folded": true,
                          "name": "Show the unit UI",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "disabled": false,
                              "folded": false,
                              "type": "BuiltinCommonInstructions::JsCode",
                              "inlineCode": "const object = objects[0]\nconst unit = runtimeScene.linkedObjectsManager.getObjectsLinkedWith(object)[0]\n\nruntimeScene.getLayer(\"unit\").show(true)\nruntimeScene.getVariables().get(\"unit_ui_visible\").setString(unit.name)\n\n// Refresh the unit layer image\nconst allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst unitImage = allObjects.filter((object) => {\n    return typeof object.getBehavior(\"unit_layer_image\") !== \"undefined\"\n})[0]\nunitImage.getBehavior(\"unit_layer_image\").refresh_unit_image()\n\n// Refresh the unit layer text\nconst unitText = allObjects.filter((object) => {\n    return typeof object.getBehavior(\"unit_layer_text\") !== \"undefined\"\n})[0]\nunitText.getBehavior(\"unit_layer_text\").refresh_unit_text()",
                              "parameterObjects": "Object",
                              "useStrict": true
                            }
                          ],
                          "parameters": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Change slot colour based on selection",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "setup::slot::can_be_selected"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": true,
                                "value": "setup::slot::is_slot_selected"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "disabled": false,
                              "folded": true,
                              "name": "Set colour to deselected",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "disabled": false,
                                  "folded": false,
                                  "type": "BuiltinCommonInstructions::JsCode",
                                  "inlineCode": "objects[0].setColor(\"255;255;255\")",
                                  "parameterObjects": "Object",
                                  "useStrict": true
                                }
                              ],
                              "parameters": []
                            }
                          ]
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "setup::slot::is_slot_selected"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "colorB": 228,
                              "colorG": 176,
                              "colorR": 74,
                              "creationTime": 0,
                              "disabled": false,
                              "folded": true,
                              "name": "Set colour to selected",
                              "source": "",
                              "type": "BuiltinCommonInstructions::Group",
                              "events": [
                                {
                                  "disabled": false,
                                  "folded": false,
                                  "type": "BuiltinCommonInstructions::JsCode",
                                  "inlineCode": "objects[0].setColor(\"233;63;63\")",
                                  "parameterObjects": "Object",
                                  "useStrict": true
                                }
                              ],
                              "parameters": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "setup::slot::can_be_selected"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "colorB": 228,
                          "colorG": 176,
                          "colorR": 74,
                          "creationTime": 0,
                          "disabled": false,
                          "folded": true,
                          "name": "Set colour to unselectable",
                          "source": "",
                          "type": "BuiltinCommonInstructions::Group",
                          "events": [
                            {
                              "disabled": false,
                              "folded": false,
                              "type": "BuiltinCommonInstructions::JsCode",
                              "inlineCode": "objects[0].setColor(\"125;125;125\")",
                              "parameterObjects": "Object",
                              "useStrict": true
                            }
                          ],
                          "parameters": []
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Has the slot been purchased and is able to be selected",
              "fullName": "Can the slot be selected",
              "functionType": "Condition",
              "name": "can_be_selected",
              "sentence": "Slot _PARAM0_ can be selected",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarGlobal"
                      },
                      "parameters": [
                        "column_owned",
                        "<=",
                        "Object.Variable(column)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Is the slot selected?",
              "fullName": "Is the slot selected",
              "functionType": "Condition",
              "name": "is_slot_selected",
              "sentence": "_PARAM0_ is selected",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarScene"
                      },
                      "parameters": [
                        "selected_slot",
                        "=",
                        "Object.Variable(id)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Spawn a aved unit associated with the slot",
              "fullName": "Spawn a saved unit",
              "functionType": "Action",
              "name": "spawn_saved_unit",
              "sentence": "Spawn a saved unit for _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "// Get setup data as an array\nconst setupString = runtimeScene._runtimeGame.getVariables().get(\"setup_data\").getAsString()\nconst setupData = JSON.parse(setupString)\n\n// Find the data relating to the slot\nconst object = objects[0]\nconst column = object.getVariables().get(\"column\").getAsNumber()\nconst row = object.getVariables().get(\"row\").getAsNumber()\nlet slotData = setupData.filter((data) => {\n    return (data.column === column) && (data.row === row)\n})\n\nif (slotData.length === 0) {\n    return\n}\n\nif (slotData.length > 1) {\n    console.log(\"found more than one slot data for this slot, there must be a problem: \" + column + \":\" + row)\n    return \n}\n\nslotData = slotData[0]\n\n// spawn the unit\nconst unit = runtimeScene.createObject(slotData.unitName)\n\n// position it over the slot\nunit.setX(object.getX())\nunit.setY(object.getAABB().max[1] - unit.getHeight() - 50)\nunit.setZOrder(-1)\n\n// link it to the slot\nruntimeScene.linkedObjectsManager.linkObjects(unit, object)\n\n// mark slot as occupied\nobject.getVariables().get(\"is_occupied\").setString(\"true\")",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Is the slot occupied?",
              "fullName": "Is slot occupied",
              "functionType": "Condition",
              "name": "is_occupied",
              "sentence": "Is _PARAM0_ occupied",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "is_occupied",
                        "=",
                        "\"true\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Clickbox for a unit in the shop",
          "fullName": "Buy Unit Area",
          "name": "buy_unit_area",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "LayerVisible"
                      },
                      "parameters": [
                        "",
                        "\"shop\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Create and link a unit to a slot, show the unit page",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const object = objects[0]\nconst unitToBuy = object.getVariables().get(\"unit\").getAsString()\nconst cost = runtimeScene.getVariables().get(unitToBuy + \"_cost\").getAsNumber()\n\n// Find the slot to attach the unit to\nconst slotID = runtimeScene.getVariables().get(\"selected_slot\").getAsNumber()\nconst allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst slot = allObjects.filter((obj) => {\n    return obj.getVariables().get(\"id\").getAsNumber() == slotID\n})[0]\n\n// Check and subtract the cost\nconst cache_available = runtimeScene._runtimeGame.getVariables().get(\"player_cache\").getAsNumber()\nif (cache_available < cost) {\n    return\n}\nruntimeScene._runtimeGame.getVariables().get(\"player_cache\").setNumber(cache_available - cost)\n\n// Spawn the unit\nconst newUnit = runtimeScene.createObject(unitToBuy)\n\n// Position the unit on top of the slot\nnewUnit.setX(slot.getX())\nnewUnit.setY(slot.getAABB().max[1] - newUnit.getHeight() - 20)\n\n// Link the unit to the slot\nruntimeScene.linkedObjectsManager.linkObjects(newUnit, slot)\n\n// Mark the slot as occupied\nslot.getVariables().get(\"is_occupied\").setString(\"true\")\n\n// Set it to the scene variable\nruntimeScene.getVariables().get(\"unit_ui_visible\").setString(unitToBuy)\n\n// Hide the shop layer\nruntimeScene.getLayer(\"shop\").show(false)\n\n// Refresh the unit layer image\nconst unitImage = allObjects.filter((object) => {\n    return typeof object.getBehavior(\"unit_layer_image\") !== \"undefined\"\n})[0]\nunitImage.getBehavior(\"unit_layer_image\").refresh_unit_image()\n\n// Refresh the unit layer text\nconst unitText = allObjects.filter((object) => {\n    return typeof object.getBehavior(\"unit_layer_text\") !== \"undefined\"\n})[0]\nunitText.getBehavior(\"unit_layer_text\").refresh_unit_text()\n\n// Show the unit layer\nruntimeScene.getLayer(\"unit\").show(true)",
                          "parameterObjects": "Object",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::buy_unit_area",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "A button which can be used to sell a unit",
          "fullName": "Sell Unit",
          "name": "sell_unit",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPostEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": true,
                        "value": "LayerVisible"
                      },
                      "parameters": [
                        "",
                        "\"shop\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Unlink and delete the unit, show the shop",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "// Find the selected slot\nconst slotID = runtimeScene.getVariables().get(\"selected_slot\").getAsNumber()\nconst allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst slot = allObjects.filter((obj) => {\n    return obj.getVariables().get(\"id\").getAsNumber() == slotID\n})[0]\n\n// Get the linked unit\nconst unit = runtimeScene.linkedObjectsManager.getObjectsLinkedWith(slot)[0]\n\n// Refund the cost of the unit\nconst cost = runtimeScene.getVariables().get(unit.name + \"_cost\").getAsNumber()\nconst cache = runtimeScene._runtimeGame.getVariables().get(\"player_cache\").getAsNumber()\n\nruntimeScene._runtimeGame.getVariables().get(\"player_cache\").setNumber(cache + cost)\n\n// Unlink the unit\nruntimeScene.linkedObjectsManager.removeLinkBetween(slot, unit)\n\n// Hide the unit ui\nruntimeScene.getLayer(\"unit\").show(false)\n\n// Reset the unit UI\nruntimeScene.getVariables().get(\"unit_ui_visible\").setString(\"none\")\n\n// Show the shop\nruntimeScene.getLayer(\"shop\").show(true)\n\n// Remove the unit\nruntimeScene.markObjectForDeletion(unit)\n\n// Mark the slot as unoccupied\nslot.getVariables().get(\"is_occupied\").setString(\"false\")",
                          "parameterObjects": "",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::sell_unit",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Button that buys a column",
          "fullName": "Buy Column",
          "name": "buy_column",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "setup::buy_column::show_buy_button"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Cache"
                      },
                      "parameters": [
                        "Object"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::buy_column::show_buy_button"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      },
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Visible"
                      },
                      "parameters": [
                        "Object"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarGlobal"
                      },
                      "parameters": [
                        "player_cache",
                        ">=",
                        "Object.Variable(cost)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarGlobal"
                      },
                      "parameters": [
                        "player_cache",
                        "-",
                        "Object.Variable(cost)"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarGlobal"
                      },
                      "parameters": [
                        "column_owned",
                        "=",
                        "Object.Variable(column_to_buy)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": true,
                  "name": "Grey or highlight if the column can be bought",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "const object = objects[0]\nconst cost = object.getVariables().get(\"cost\").getAsNumber()\nconst cache = runtimeScene._runtimeGame.getVariables().get(\"player_cache\").getAsNumber()\n\nconst colour = (cost > cache) ? \"100;100;100\" : \"255;255;255\"\nobject.setColor(colour)",
                      "parameterObjects": "Object",
                      "useStrict": true
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::buy_column",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Should the buy button show?",
              "fullName": "Should the buy button show",
              "functionType": "Condition",
              "name": "show_buy_button",
              "sentence": "_PARAM0_ should be visible",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarGlobal"
                      },
                      "parameters": [
                        "column_owned",
                        "=",
                        "Object.Variable(column_to_buy) + 1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::buy_column",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Setup the column cost",
              "fullName": "Setup column cost",
              "functionType": "Action",
              "name": "setup_cost",
              "sentence": "Setup _PARAM0_ column cost",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const object = objects[0]\n\nconst column = object.getVariables().get(\"column_to_buy\").getAsNumber()\nconst cost = runtimeScene.getVariables().get(\"column_\" + column + \"_cost\").getAsNumber()\n\nobject.getVariables().get(\"cost\").setNumber(cost)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::buy_column",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Something that shows the current cache count",
          "fullName": "Cache display",
          "name": "cache",
          "objectType": "TextObject::Text",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "\"Cache: \" + GlobalVariableString(player_cache)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::cache",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Displays the cost of a unit",
          "fullName": "Cost of unit",
          "name": "cost_of_unit",
          "objectType": "TextObject::Text",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "DepartScene"
                      },
                      "parameters": [
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Get the unit cost and set it to text",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const object = objects[0]\nconst unitName = object.getVariables().get(\"unit_name\").getAsString()\nconst cost = runtimeScene.getVariables().get(unitName + \"_cost\").getAsString()\nobject.setString(cost)",
                          "parameterObjects": "Object",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::cost_of_unit",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "A unit that appears in the shop",
          "fullName": "Shop Unit",
          "name": "shop_unit",
          "objectType": "",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": true,
                  "name": "Grey or highlight the unit if it can be bought",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "const object = objects[0]\nconst name = object.getVariables().get(\"unit_name\").getAsString()\nconst cost = runtimeScene.getVariables().get(name + \"_cost\").getAsNumber()\nconst cache = runtimeScene._runtimeGame.getVariables().get(\"player_cache\").getAsNumber()\n\nconst colour = (cost > cache) ? \"100;100;100\" : \"255;255;255\"\nobject.setColor(colour)",
                      "parameterObjects": "Object",
                      "useStrict": true
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::shop_unit",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Button that moves from the setup scene to the battle scene",
          "fullName": "Ready To Battle Button",
          "name": "ready_to_battle",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "setup::ready_to_battle::show_ready_button"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Cache"
                      },
                      "parameters": [
                        "Object"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::ready_to_battle::show_ready_button"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      },
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Visible"
                      },
                      "parameters": [
                        "Object"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Store unit setup",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "// Get all slots\nconst allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst slots = allObjects.filter((obj) => {\n    return (typeof obj.getBehavior(\"slot\") !== \"undefined\")\n})\n\n// Create empty array to store slot data\nconst dataStore = []\n\nslots.forEach((slot) => {\n    // For each slot, get its linked unit    \n    const unit = runtimeScene.linkedObjectsManager.getObjectsLinkedWith(slot)[0]\n    const column = slot.getVariables().get(\"column\").getAsNumber()\n    const row = slot.getVariables().get(\"row\").getAsNumber()\n\n    if (typeof unit == \"undefined\") {\n        return\n    }\n    // record the unit name, the column and row\n    const slotData = {\n        unitName: unit.name,\n        column: column,\n        row: row\n    }\n    dataStore.push(slotData)\n})\n\n// Stringify the object and save to a global variable\nconst dataString = JSON.stringify(dataStore)\nruntimeScene._runtimeGame.getVariables().get(\"setup_data\").setString(dataString)",
                          "parameterObjects": "",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Scene"
                          },
                          "parameters": [
                            "",
                            "\"battle\"",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::ready_to_battle",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Should the ready button be shown?",
              "fullName": "Should the ready button be shown",
              "functionType": "Condition",
              "name": "show_ready_button",
              "sentence": "_PARAM0_ is visible",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "BuiltinCommonInstructions::And"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "LayerVisible"
                          },
                          "parameters": [
                            "",
                            "\"unit\""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": true,
                            "value": "LayerVisible"
                          },
                          "parameters": [
                            "",
                            "\"shop\""
                          ],
                          "subInstructions": []
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::ready_to_battle",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "For the background object that hides the shop UI",
          "fullName": "Hide The UI",
          "name": "hide_all_ui",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      },
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      },
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "HideLayer"
                      },
                      "parameters": [
                        "",
                        "\"shop\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "HideLayer"
                      },
                      "parameters": [
                        "",
                        "\"unit\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "selected_slot",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::hide_all_ui",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Displays the cost of a column",
          "fullName": "Column Cost",
          "name": "column_cost",
          "objectType": "TextObject::Text",
          "eventsFunctions": [
            {
              "description": "Sets up the cost of the column text",
              "fullName": "Setup cost",
              "functionType": "Action",
              "name": "setup_cost",
              "sentence": "Setup cost text for _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const object = objects[0]\n\nconst column = object.getVariables().get(\"column\").getAsNumber()\nconst cost = runtimeScene.getVariables().get(\"column_\" + column + \"_cost\").getAsNumber()\n\nobject.setString(cost)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::column_cost",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Should the column cost be visible?",
              "fullName": "Column cost is visible",
              "functionType": "Condition",
              "name": "show_cost",
              "sentence": "_PARAM0_ is visible",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarGlobal"
                      },
                      "parameters": [
                        "column_owned",
                        "=",
                        "Object.Variable(column) + 1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::column_cost",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPreEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "setup::column_cost::show_cost"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      },
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "setup::column_cost::show_cost"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Cache"
                      },
                      "parameters": [
                        "Object"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::column_cost",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Displays the unit selected in the setup screen on an occupied slot",
          "fullName": "Unit Layer Image",
          "name": "unit_layer_image",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "Refreshes the image on the unit layer with the currently selected unit",
              "fullName": "Refresh unit image",
              "functionType": "Action",
              "name": "refresh_unit_image",
              "sentence": "Refresh the unit attached to _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const object = objects[0]\nobject.hide(true)\n\n// Get linked unit\nlet oldUnit = runtimeScene.linkedObjectsManager.getObjectsLinkedWith(object)\n\nif (oldUnit.length > 0) {\n    oldUnit = oldUnit[0] \n    runtimeScene.linkedObjectsManager.removeLinkBetween(object, oldUnit)\n    runtimeScene.markObjectForDeletion(oldUnit)\n}\n\n// Spawn selected unit\nconst unitName = runtimeScene.getVariables().get(\"unit_ui_visible\").getAsString()\n\n// Spawn the unit\nconst newUnit = runtimeScene.createObject(unitName)\n\n// Position the unit on top of the slot\nnewUnit.setLayer(\"unit\")\nnewUnit.setX(object.getX())\nnewUnit.setY(object.getY())\n\n// Link the unit to the object\nruntimeScene.linkedObjectsManager.linkObjects(newUnit, object)\n",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::unit_layer_image",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "The unit text part of the unit layer on the setup scene",
          "fullName": "Unit Layer Text",
          "name": "unit_layer_text",
          "objectType": "TextObject::Text",
          "eventsFunctions": [
            {
              "description": "Refreshes the image on the unit layer with the currently selected unit",
              "fullName": "Refresh unit image",
              "functionType": "Action",
              "name": "refresh_unit_text",
              "sentence": "Refresh the unit attached to _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const object = objects[0]\n\nlet unitName = runtimeScene.getVariables().get(\"unit_ui_visible\").getAsString()\n\nunitName = unitName[0].toUpperCase() + unitName.substring(1)\nobject.setString(unitName)\nobject.setTextAlignment(\"center\")",
                  "parameterObjects": "Object",
                  "useStrict": true
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "setup::unit_layer_text",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        }
      ]
    },
    {
      "author": "",
      "description": "",
      "extensionNamespace": "",
      "fullName": "",
      "name": "battle",
      "shortDescription": "",
      "tags": "",
      "version": "",
      "eventsFunctions": [
        {
          "description": "Returns true when only one team remains",
          "fullName": "Is the battle over",
          "functionType": "Condition",
          "name": "is_battle_over",
          "sentence": "The battle is over",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst allHeroes = allObjects.filter((object) => {\n    return (typeof object.getBehavior(\"hero\") != \"undefined\")\n})\n\nconst aliveHeroes = allHeroes.filter((hero) => {\n    return hero.getBehavior(\"hero\")._behaviorData.health > 0\n})\n\nconst teamToCheck = aliveHeroes[0].getVariables().get(\"team\").getAsNumber()\nconst isBattleOver = aliveHeroes.every((hero) => {\n    return hero.getVariables().get(\"team\").getAsNumber() == teamToCheck\n})\n\nif (isBattleOver) {\n    runtimeScene.getVariables().get(\"is_battle_over\").setString(\"true\")\n    runtimeScene.getVariables().get(\"winning_team\").setNumber(teamToCheck)\n}",
              "parameterObjects": "",
              "useStrict": true
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarSceneTxt"
                  },
                  "parameters": [
                    "is_battle_over",
                    "=",
                    "\"true\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [],
          "objectGroups": []
        },
        {
          "description": "Has the battle been won by the player?",
          "fullName": "Is the battle won",
          "functionType": "Condition",
          "name": "is_battle_won",
          "sentence": "Team _PARAM1_ has won the battle",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarSceneTxt"
                  },
                  "parameters": [
                    "is_battle_over",
                    "=",
                    "\"true\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "VarScene"
                  },
                  "parameters": [
                    "winning_team",
                    "=",
                    "GetArgumentAsNumber(\"team_number\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Team number to check if they won",
              "longDescription": "",
              "name": "team_number",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "After a delay, transition to setup scene",
          "fullName": "Transition to setup",
          "functionType": "Action",
          "name": "transition_to_setup",
          "sentence": "Transition to setup screen after _PARAM1_ seconds",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarSceneTxt"
                  },
                  "parameters": [
                    "transitioning_to_setup",
                    "=",
                    "\"false\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ResetTimer"
                  },
                  "parameters": [
                    "",
                    "\"setup_transition\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarSceneTxt"
                  },
                  "parameters": [
                    "transitioning_to_setup",
                    "=",
                    "\"true\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_battle_won"
                      },
                      "parameters": [
                        "",
                        "1",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarGlobal"
                      },
                      "parameters": [
                        "player_cache",
                        "+",
                        "Variable(battle_won_cache)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_battle_won"
                      },
                      "parameters": [
                        "",
                        "2",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarGlobal"
                      },
                      "parameters": [
                        "player_cache",
                        "+",
                        "Variable(battle_lost_cache)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "Timer"
                  },
                  "parameters": [
                    "",
                    "GetArgumentAsNumber(\"delay\")",
                    "\"setup_transition\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "Scene"
                  },
                  "parameters": [
                    "",
                    "\"setup\"",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "How many seconds to wait before transitioning back to the setup scene",
              "longDescription": "",
              "name": "delay",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Has the game been lost?",
          "fullName": "Game lost",
          "functionType": "Condition",
          "name": "is_game_lost",
          "sentence": "The game has been lost",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarGlobal"
                  },
                  "parameters": [
                    "player_health",
                    "<=",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [],
          "objectGroups": []
        },
        {
          "description": "Has the game been won?",
          "fullName": "Game won",
          "functionType": "Condition",
          "name": "is_game_won",
          "sentence": "The game has been won",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarGlobal"
                  },
                  "parameters": [
                    "round",
                    ">",
                    "10"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "battle::is_battle_won"
                  },
                  "parameters": [
                    "",
                    "1",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [],
          "objectGroups": []
        },
        {
          "description": "Has the game finished?",
          "fullName": "Game is over",
          "functionType": "Condition",
          "name": "is_game_finished",
          "sentence": "The game is finished",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_game_lost"
                      },
                      "parameters": [
                        "",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::is_game_won"
                      },
                      "parameters": [
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [],
          "objectGroups": []
        }
      ],
      "eventsBasedBehaviors": [
        {
          "description": "A play hero unit in the battle scene",
          "fullName": "Hero Unit",
          "name": "hero",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "onCreated",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::hero::SetPropertyhealth"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "=",
                        "Object.Behavior::Propertymax_health()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::hero",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPostEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "DepartScene"
                      },
                      "parameters": [
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarObjet"
                          },
                          "parameters": [
                            "Object",
                            "team",
                            "=",
                            "2"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "FlipX"
                          },
                          "parameters": [
                            "Object",
                            "yes"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": true,
                      "name": "Create health bars",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const hero = objects[0]\n\nconst redHealthBar = runtimeScene.createObject(\"health_bar\")\nredHealthBar.setX(hero.getAABB().min[0])\nredHealthBar.setY(hero.getAABB().max[1] + 10)\nredHealthBar.setWidth(hero.getWidth())\nredHealthBar.setColor(\"233;63;63\")\nredHealthBar.setZOrder(1)\n\nconst greenHealthBar = runtimeScene.createObject(\"health_bar\")\ngreenHealthBar.setX(hero.getAABB().min[0])\ngreenHealthBar.setY(hero.getAABB().max[1] + 10)\ngreenHealthBar.setWidth(hero.getWidth())\ngreenHealthBar.setColor(\"62;233;102\")\ngreenHealthBar.setZOrder(2)\n\nruntimeScene.linkedObjectsManager.linkObjects(hero, greenHealthBar)",
                          "parameterObjects": "Object",
                          "useStrict": true
                        }
                      ],
                      "parameters": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::hero::Propertyhealth"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ">",
                        "1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarSceneTxt"
                          },
                          "parameters": [
                            "tick",
                            "=",
                            "\"true\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::hero::run_turn"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "If an attack/other animation is playing, wait for it to finish before ending the tick",
                      "comment2": ""
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "AnimationName"
                          },
                          "parameters": [
                            "Object",
                            "\"idle\""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "AnimationEnded"
                          },
                          "parameters": [
                            "Object"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "\"idle\""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "hero_ready_count",
                            "+",
                            "1"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "battle::hero::Propertyhealth"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        ">",
                        "1"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": true,
                        "value": "AnimationName"
                      },
                      "parameters": [
                        "Object",
                        "\"dead\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "Object",
                        "\"dead\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "hero_count",
                        "-",
                        "1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::hero",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Run's the hero's turn",
              "fullName": "Run Turn",
              "functionType": "Action",
              "name": "run_turn",
              "sentence": "_PARAM0_ run turn",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "battle::hero::SetPropertycurrent_speed_charge"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "+",
                        "1"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": true,
                            "value": "battle::hero::Propertycurrent_speed_charge"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "=",
                            "Object.Behavior::Propertyspeed()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "\"idle\""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "hero_ready_count",
                            "+",
                            "1"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::hero::Propertycurrent_speed_charge"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "=",
                            "Object.Behavior::Propertyspeed()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "SetAnimationName"
                          },
                          "parameters": [
                            "Object",
                            "\"attack\""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::hero::SetPropertycurrent_speed_charge"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "=",
                            "0"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "battle::hero::deal_damage"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "Object.Behavior::Propertydamage()",
                            "Object.Behavior::Propertyattack_target()",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::hero",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Deals damage to an enemy",
              "fullName": "Deal Damage",
              "functionType": "Action",
              "name": "deal_damage",
              "sentence": "_PARAM0_ deal _PARAM2_ damage to _PARAM3_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "// get attacking team\nconst attacker = objects[0]\nconst attackerTeam = attacker.getVariables().get(\"team\").getAsNumber()\n\n// find enemies\nconst allObjects = runtimeScene.getAdhocListOfAllInstances()\nconst enemies = allObjects.filter((hero) => {\n    if (typeof hero.getBehavior(\"hero\") == \"undefined\") {\n        return false\n    }\n\n    const onDifferentTeam = hero.getVariables().get(\"team\").getAsNumber() != attackerTeam\n    const alive = hero.getBehavior(\"hero\")._behaviorData.health > 0\n    return alive && onDifferentTeam\n})\n\nif (enemies.length == 0) {\n    return\n}\n\n// Sort enemies into their columns\nenemies.sort((a, b) => {\n    const aCol = a.getVariables().get(\"column\").getAsNumber()\n    const bCol = b.getVariables().get(\"column\").getAsNumber()\n    return aCol - bCol\n})\n\nconst target = eventsFunctionContext.getArgument(\"target\")\nconst damage = eventsFunctionContext.getArgument(\"damage\")\n\nconst toBeDamaged = []\nif (target == \"single\") {\n    toBeDamaged.push(enemies[0])\n}\nif (target == \"splash\") {\n    const targetColumn = enemies[0].getVariables().get(\"column\").getAsNumber()\n    enemies.forEach((hero) => {\n        if (hero.getVariables().get(\"column\").getAsNumber() == targetColumn) {\n            toBeDamaged.push(hero)\n        }\n    })\n}\nif (target == \"pierce\") {\n    toBeDamaged.push(enemies[0])\n\n    const targetColumn = enemies[0].getVariables().get(\"column\").getAsNumber() + 1\n    const targetRow = enemies[0].getVariables().get(\"row\").getAsNumber()\n\n    const possibilities = enemies.filter((hero) => {\n        const heroColumn = hero.getVariables().get(\"column\").getAsNumber()\n        const heroRow = hero.getVariables().get(\"row\").getAsNumber()\n\n        const nextColumn = heroColumn == targetColumn\n        const correctRow = Math.abs(heroRow - targetRow) == 1\n        return nextColumn && correctRow\n    })\n    \n    if (possibilities.length > 0) {\n        toBeDamaged.push(possibilities[0])\n    }\n}\n\ntoBeDamaged.forEach((hero) => {\n    hero.getBehavior(\"hero\")._behaviorData.health -= damage\n})",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::hero",
                  "type": "behavior"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "damage to deal",
                  "longDescription": "",
                  "name": "damage",
                  "optional": false,
                  "supplementaryInformation": "",
                  "type": "expression"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "the target to select",
                  "longDescription": "",
                  "name": "target",
                  "optional": false,
                  "supplementaryInformation": "",
                  "type": "string"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": [
            {
              "value": "5",
              "type": "Number",
              "label": "Damage the hero deals on attack",
              "description": "",
              "extraInformation": [],
              "hidden": false,
              "name": "damage"
            },
            {
              "value": "0",
              "type": "Number",
              "label": "Current health of the hero",
              "description": "",
              "extraInformation": [],
              "hidden": true,
              "name": "health"
            },
            {
              "value": "3",
              "type": "Number",
              "label": "Ticks per attack",
              "description": "",
              "extraInformation": [],
              "hidden": false,
              "name": "speed"
            },
            {
              "value": "0",
              "type": "Number",
              "label": "Current attack tick",
              "description": "",
              "extraInformation": [],
              "hidden": true,
              "name": "current_speed_charge"
            },
            {
              "value": "single",
              "type": "String",
              "label": "Attack target pattern",
              "description": "",
              "extraInformation": [],
              "hidden": false,
              "name": "attack_target"
            },
            {
              "value": "50",
              "type": "Number",
              "label": "Maximum/starting health of the hero",
              "description": "",
              "extraInformation": [],
              "hidden": false,
              "name": "max_health"
            }
          ]
        },
        {
          "description": "Health bar for a unit in the battle scene",
          "fullName": "Unit Health Bar",
          "name": "health_bar",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "doStepPostEvents",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const healthBar = objects[0]\nconst heroes = runtimeScene.linkedObjectsManager.getObjectsLinkedWith(healthBar)\n\n// The red health bar is never linked, we only want the green one\nif (heroes.length == 0) {\n    return\n}\n        \nconst hero = heroes[0]\nconst health = hero.getBehavior(\"hero\")._behaviorData.health\nconst maxHealth = hero.getBehavior(\"hero\")._behaviorData.max_health\nconst healthPercentage = health / maxHealth\nconst width = hero.getWidth() * healthPercentage\n\nconst t = 0.9\nconst interoplatedValue = healthBar.getWidth() * t + width * (1-t)\nhealthBar.setWidth(interoplatedValue)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::health_bar",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "A slot in the battle scene",
          "fullName": "Battle Slot",
          "name": "slot",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "Spawns a unit from global variable data and from the row and column variables on the slot",
              "fullName": "Spawn unit",
              "functionType": "Action",
              "name": "spawn_unit",
              "sentence": "Spawn a unit at _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "// Get data as an array\nconst setupString = runtimeScene._runtimeGame.getVariables().get(\"setup_data\").getAsString()\nconst setupData = JSON.parse(setupString)\n\n// Find the data relating to the slot\nconst object = objects[0]\nconst column = object.getVariables().get(\"column\").getAsNumber()\nconst row = object.getVariables().get(\"row\").getAsNumber()\nlet slotData = setupData.filter((data) => {\n    return (data.column === column) && (data.row === row)\n})\n\n// hide the slot\nobject.hidden = true\n\nif (slotData.length === 0) {\n    return\n}\n\nif (slotData.length > 1) {\n    console.log(\"found more than one slot data for this slot, there must be a problem: \" + column + \":\" + row)\n    return \n}\n\nslotData = slotData[0]\n\n// spawn the unit\nconst unit = runtimeScene.createObject(slotData.unitName)\n\n// position it over the slot\nunit.setX(object.getX())\nunit.setY(object.getY())\n\n// give it the team, row and column variables\nunit.getVariables().get(\"team\").setNumber(1)\nunit.getVariables().get(\"column\").setNumber(slotData.column)\nunit.getVariables().get(\"row\").setNumber(slotData.row)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Spawns an enemy from global variable data and from the row and column variables on the slot",
              "fullName": "Spawn enemy",
              "functionType": "Action",
              "name": "spawn_enemy",
              "sentence": "Spawn an enemy at _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "// Get round data as an array\nconst roundString = runtimeScene._runtimeGame.getVariables().get(\"round_data\").getAsString()\nconst rounds = JSON.parse(roundString)\n\n// Find the data for the current round\nconst currentRound = runtimeScene._runtimeGame.getVariables().get(\"round\").getAsNumber()\nconst roundData = rounds.filter((round) => {\n    return round.round === currentRound\n})[0]\n\n// Find the data relating to the slot\nconst object = objects[0]\nconst column = object.getVariables().get(\"column\").getAsNumber()\nconst row = object.getVariables().get(\"row\").getAsNumber()\n\nlet slotData = roundData.units.filter((data) => {\n    return (data.column === column) && (data.row === row)\n})\n\n// hide the slot\nobject.hidden = true\n\nif (slotData.length === 0) {\n    return\n}\n\nif (slotData.length > 1) {\n    console.log(\"found more than one enemy data for this slot, there must be a problem: \" + column + \":\" + row)\n    return \n}\n\nslotData = slotData[0]\n\n// spawn the unit\nconst unit = runtimeScene.createObject(slotData.name)\n\n// position it over the slot\nunit.setX(object.getX())\nunit.setY(object.getY())\n\n// give it the team, row and column variables\nunit.getVariables().get(\"team\").setNumber(2)\nunit.getVariables().get(\"column\").setNumber(slotData.column)\nunit.getVariables().get(\"row\").setNumber(slotData.row)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::slot",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "For the green player health bar",
          "fullName": "Player Health Bar",
          "name": "player_health_bar",
          "objectType": "Sprite",
          "eventsFunctions": [
            {
              "description": "Updates the width of the player health bar in a lerp",
              "fullName": "Update player health bar lerp",
              "functionType": "Action",
              "name": "update_player_health_bar_lerp",
              "sentence": "Lerp update the player _PARAM0_ ",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const health = runtimeScene._runtimeGame.getVariables().get(\"player_health\").getAsNumber()\nconst maxHealth = runtimeScene._runtimeGame.getVariables().get(\"player_health_max\").getAsNumber()\n\nconst healthPercentage = health / maxHealth\n\nconst healthBar = objects[0]\nconst width = 200 * healthPercentage\n\nconst t = 0.9\n\nconst interoplatedValue = healthBar.getWidth() * t + width * (1-t)\nhealthBar.setWidth(interoplatedValue)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::player_health_bar",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Updates the player health bar instantly",
              "fullName": "Update the player healthbar immediately",
              "functionType": "Action",
              "name": "update_health_bar_immediately",
              "sentence": "Immediately update player _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const health = runtimeScene._runtimeGame.getVariables().get(\"player_health\").getAsNumber()\nconst maxHealth = runtimeScene._runtimeGame.getVariables().get(\"player_health_max\").getAsNumber()\n\nconst healthPercentage = health / maxHealth\n\nconst healthBar = objects[0]\nconst width = 200 * healthPercentage\n\nconst t = 0\n\nconst interoplatedValue = healthBar.getWidth() * t + width * (1-t)\nhealthBar.setWidth(interoplatedValue)",
                  "parameterObjects": "Object",
                  "useStrict": true
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "Sprite",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::player_health_bar",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        },
        {
          "description": "Round counter text for the battle scene",
          "fullName": "Round Counter",
          "name": "round_counter",
          "objectType": "TextObject::Text",
          "eventsFunctions": [
            {
              "description": "Updates the round counter text",
              "fullName": "Initialize round counter",
              "functionType": "Action",
              "name": "initialize_round_counter",
              "sentence": "Initialize the text for _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "\"Round: \" + GlobalVariableString(round)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "longDescription": "",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextObject::Text",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "longDescription": "",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "battle::round_counter",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        }
      ]
    }
  ],
  "externalLayouts": [],
  "externalSourceFiles": []
}